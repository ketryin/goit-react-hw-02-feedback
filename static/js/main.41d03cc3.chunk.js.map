{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.css","components/Notification/Notification.module.css","components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","components/Section/Section.js","components/Statistics/Statistics.js","App.js","index.js"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","className","styles","listBtn","map","option","btn","onClick","Notification","message","text","defaultProps","Section","title","children","section","Statistics","good","neutral","bad","total","positivePercentage","listFeedbackn","App","state","incrementCounter","feedback","setState","prevState","this","Math","round","countTotalFeedback","countPositiveFeedbackPercentage","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,QAAU,iCAAiC,IAAM,+B,sCCAnED,EAAOC,QAAU,CAAC,KAAO,6B,gBCAzBD,EAAOC,QAAU,CAAC,cAAgB,oC,qKCoBnBC,EAjBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,oBAAIC,UAAWC,IAAOC,QAAtB,SACGJ,EAAQK,KAAI,SAACC,GAAD,OACX,6BACE,wBAAQJ,UAAWC,IAAOI,IAAKC,QAAS,kBAAMP,EAAgBK,IAA9D,SACGA,KAFIA,S,gBCHTG,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,mBAAGR,UAAWC,IAAOQ,KAArB,SAA4BD,KAElED,EAAaG,aAAe,CAC1BF,QAAS,UAOID,Q,gBCVTI,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,0BAASb,UAAWC,IAAOa,QAA3B,UACE,oBAAId,UAAWC,IAAOW,MAAtB,SAA8BA,IAC7BC,MAILF,EAAQD,aAAe,CACrBE,MAAO,GACPC,SAAU,IAMGF,Q,iBCIAI,EApBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,qBAAIpB,UAAWC,IAAOoB,cAAtB,UACE,wCACQ,+BAAOL,OAEf,2CACW,+BAAOC,OAElB,uCACO,+BAAOC,OAEd,yCACS,+BAAOC,OAEhB,qDACqB,iCAAOC,EAAP,cCuCVE,E,4MAjDbC,MAAQ,CACNP,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPM,iBAAmB,SAACC,GAClB,EAAKC,UAAS,SAACC,GAAD,sBACXF,EAAWE,EAAUF,GAAY,O,wDAGtC,WACE,OAAOG,KAAKL,MAAMP,KAAOY,KAAKL,MAAMN,QAAUW,KAAKL,MAAML,M,6CAE3D,WACE,OAAOW,KAAKC,MACS,IAAlBF,KAAKL,MAAMP,MACTY,KAAKL,MAAMP,KAAOY,KAAKL,MAAMN,QAAUW,KAAKL,MAAML,Q,oBAGzD,WAAU,IAAD,OACP,EAA+BU,KAAKL,MAA5BP,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAEvB,OACE,sBAAKlB,UAAU,MAAf,UACE,cAAC,EAAD,CAASY,MAAM,wBAAf,SACE,cAAC,EAAD,CACEd,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAAiB,SAACK,GAAD,OAAY,EAAKoB,iBAAiBpB,QAGvD,cAAC,EAAD,CAASQ,MAAM,aAAf,SACGgB,KAAKG,qBAAuB,EAC3B,cAAC,EAAD,CACEf,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOS,KAAKG,qBACZX,mBAAoBQ,KAAKI,oCAG3B,cAAC,EAAD,CAAcxB,QAAQ,+B,GA1ChByB,aCFlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.41d03cc3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"listBtn\":\"FeedbackOptions_listBtn__14-i0\",\"btn\":\"FeedbackOptions_btn__3DnHR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Notification_text__2IhmC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listFeedbackn\":\"Statistics_listFeedbackn__1ys9D\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./FeedbackOptions.module.css\";\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\n  <ul className={styles.listBtn}>\n    {options.map((option) => (\n      <li key={option}>\n        <button className={styles.btn} onClick={() => onLeaveFeedback(option)}>\n          {option}\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nFeedbackOptions.propTypes = {\n  onLeaveFeedback: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Notification.module.css\";\n\nconst Notification = ({ message }) => <p className={styles.text}>{message}</p>;\n\nNotification.defaultProps = {\n  message: \"Oops:(\",\n};\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n\nexport default Notification;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Section.module.css\";\n\nconst Section = ({ title, children }) => (\n  <section className={styles.section}>\n    <h1 className={styles.title}>{title}</h1>\n    {children}\n  </section>\n);\n\nSection.defaultProps = {\n  title: \"\",\n  children: [],\n};\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\nexport default Section;\n","import React from \"react\";\nimport styles from \"./Statistics.module.css\";\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <ul className={styles.listFeedbackn}>\n    <li>\n      Good: <span>{good}</span>\n    </li>\n    <li>\n      Neutral: <span>{neutral}</span>\n    </li>\n    <li>\n      Bad: <span>{bad}</span>\n    </li>\n    <li>\n      Total: <span>{total}</span>\n    </li>\n    <li>\n      Positive feedback: <span>{positivePercentage}%</span>\n    </li>\n  </ul>\n);\n\nexport default Statistics;\n","import React, { Component } from \"react\";\n\nimport FeedbackOptions from \"./components/FeedbackOptions\";\nimport Notification from \"./components/Notification\";\nimport Section from \"./components/Section\";\nimport Statistics from \"./components/Statistics\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  incrementCounter = (feedback) => {\n    this.setState((prevState) => ({\n      [feedback]: prevState[feedback] + 1,\n    }));\n  };\n  countTotalFeedback() {\n    return this.state.good + this.state.neutral + this.state.bad;\n  }\n  countPositiveFeedbackPercentage() {\n    return Math.round(\n      (this.state.good * 100) /\n        (this.state.good + this.state.neutral + this.state.bad)\n    );\n  }\n  render() {\n    const { good, neutral, bad } = this.state;\n\n    return (\n      <div className=\"App\">\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={[\"good\", \"neutral\", \"bad\"]}\n            onLeaveFeedback={(option) => this.incrementCounter(option)}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() > 0 ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}